Making dependency list for source file fvMesh/fvMeshGeometry.C
Making dependency list for source file fvMesh/fvMesh.C
Making dependency list for source file fvMesh/singleCellFvMesh/singleCellFvMesh.C
Making dependency list for source file fvMesh/fvPatches/fvPatch/newFvPatch.C
Making dependency list for source file fvMesh/fvMeshSubset/fvMeshSubset.C
Making dependency list for source file fvMesh/fvBoundaryMesh/fvBoundaryMesh.C
Making dependency list for source file fvMesh/fvPatches/basic/coupled/coupledFvPatch.C
Making dependency list for source file fvMesh/fvPatches/fvPatch/fvPatch.C
Making dependency list for source file fvMesh/fvPatches/basic/generic/genericFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/symmetry/symmetryFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/empty/emptyFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/cyclic/cyclicFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/wedge/wedgeFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/processor/processorFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C
Making dependency list for source file fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C
Making dependency list for source file fvMesh/fvPatches/derived/wall/wallFvPatch.C
Making dependency list for source file fvMesh/fvPatches/derived/directMapped/directMappedFvPatch.C
Making dependency list for source file fvMesh/fvPatches/derived/cohesive/cohesiveFvPatch.C
Making dependency list for source file fvMesh/fvPatches/derived/directMapped/directMappedWallFvPatch.C
Making dependency list for source file fvMesh/wallDist/wallPointYPlus/wallPointYPlus.C
Making dependency list for source file fvMesh/wallDist/nearWallDistNoSearch.C
Making dependency list for source file fvMesh/wallDist/nearWallDist.C
Making dependency list for source file fvMesh/wallDist/reflectionVectors.C
Making dependency list for source file fvMesh/wallDist/wallDist.C
Making dependency list for source file fvMesh/wallDist/wallDistReflection.C
Making dependency list for source file fvMesh/fvMeshMapper/fvSurfaceMapper.C
Making dependency list for source file fvMesh/fvMeshMapper/fvPatchMapper.C
Making dependency list for source file fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/fullStencils/CFCCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/fullStencils/CECCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/fullStencils/CPCCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/extendedCentredCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/centredCECCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/centredCFCCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/centredCPCCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/centredFECCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCECCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCFCCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCPCCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/upwindFECCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/cellToFace/MeshObjects/pureUpwindCFCCellToFaceStencilObject.C
Making dependency list for source file fvMesh/extendedStencil/faceToCell/fullStencils/faceToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/faceToCell/extendedFaceToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/faceToCell/extendedCentredFaceToCellStencil.C
Making dependency list for source file fvMesh/extendedStencil/faceToCell/MeshObjects/centredCFCFaceToCellStencilObject.C
Making dependency list for source file fields/fvPatchFields/fvPatchField/fvPatchFields.C
Making dependency list for source file fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/coupled/coupledFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/generic/genericFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/transform/transformFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/basic/transform/transformFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/empty/emptyFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/processor/processorFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C
Making dependency list for source file fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C
Making dependency list for source file fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/fan/fanFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/flux/fluxFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingMappedPressureDirectedInletVelocity/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/slip/slipFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/parabolicVelocity/parabolicVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingMappedFixedValue/AverageIOFields.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingMappedFixedValue/timeVaryingMappedFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingFlowRateInletVelocity/timeVaryingFlowRateInletVelocityFvPatchVectorField.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingUniformFixedValue/timeVaryingUniformFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingUniformInletOutlet/timeVaryingUniformInletOutletFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/totalPressure/totalPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingMappedTotalPressure/timeVaryingMappedTotalPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/timeVaryingUniformTotalPressure/timeVaryingUniformTotalPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/totalTemperature/totalTemperatureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/turbulentInlet/turbulentInletFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/turbulentIntensityKineticEnergyInlet/turbulentIntensityKineticEnergyInletFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/uniformFixedValue/uniformFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/waveTransmissive/waveTransmissiveFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/uniformDensityHydrostaticPressure/uniformDensityHydrostaticPressureFvPatchScalarField.C
Making dependency list for source file fields/fvPatchFields/derived/pulseFixedValue/pulseFixedValueFvPatchFields.C
Making dependency list for source file fields/fvPatchFields/derived/waveTransmissiveInlet/waveTransmissiveInletFvPatchFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchField/fvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/basic/calculated/calculatedFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/basic/coupled/coupledFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/basic/fixedValue/fixedValueFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/basic/sliced/slicedFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/cyclic/cyclicFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/empty/emptyFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/processor/processorFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/symmetry/symmetryFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/wedge/wedgeFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/ggi/ggiFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/cyclicGgi/cyclicGgiFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/overlapGgi/overlapGgiFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/mixingPlane/mixingPlaneFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/constraint/regionCoupling/regionCouplingFvsPatchFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/fvsPatchVectorNFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/calculatedFvsPatchVectorNFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/emptyFvsPatchVectorNFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/wedgeFvsPatchVectorNFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/coupledFvsPatchVectorNFields.C
Making dependency list for source file fields/fvsPatchFields/fvsPatchVectorNFields/processorFvsPatchVectorNFields.C
Making dependency list for source file fields/volFields/volFields.C
Making dependency list for source file fields/volFields/volVectorNFields.C
Making dependency list for source file fields/surfaceFields/surfaceFields.C
Making dependency list for source file fields/surfaceFields/surfaceVectorNFields.C
Making dependency list for source file fvMatrices/fvMatrices.C
Making dependency list for source file fvMatrices/fvScalarMatrix/fvScalarMatrix.C
Making dependency list for source file fvMatrices/solvers/MULES/MULES.C
Making dependency list for source file fvMatrices/solvers/GAMGSymSolver/GAMGAgglomerations/faceAreaPairGAMGAgglomeration/faceAreaPairGAMGAgglomeration.C
Making dependency list for source file interpolation/interpolation/interpolation/interpolations.C
Making dependency list for source file interpolation/interpolation/interpolationCell/makeInterpolationCell.C
Making dependency list for source file interpolation/interpolation/interpolationCellPoint/makeInterpolationCellPoint.C
Making dependency list for source file interpolation/interpolation/interpolationCellPoint/cellPointWeight/cellPointWeight.C
Making dependency list for source file interpolation/interpolation/interpolationCellPointFace/makeInterpolationCellPointFace.C
Making dependency list for source file interpolation/interpolation/interpolationCellPointWallModified/cellPointWeightWallModified/cellPointWeightWallModified.C
Making dependency list for source file interpolation/interpolation/interpolationCellPointWallModified/makeInterpolationCellPointWallModified.C
Making dependency list for source file interpolation/volPointInterpolation/pointPatchInterpolation/pointPatchInterpolation.C
Making dependency list for source file interpolation/volPointInterpolation/volPointInterpolation.C
Making dependency list for source file interpolation/volPointInterpolation/leastSquaresVolPointInterpolation/leastSquaresVolPointInterpolation.C
Making dependency list for source file interpolation/pointVolInterpolation/pointVolInterpolation.C
Making dependency list for source file interpolation/surfaceInterpolation/surfaceInterpolation/surfaceInterpolation.C
Making dependency list for source file interpolation/surfaceInterpolation/surfaceInterpolationScheme/surfaceInterpolationSchemes.C
Making dependency list for source file interpolation/surfaceInterpolation/VectorNSurfaceInterpolationSchemes/VectorNSurfaceInterpolationSchemes.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/linear/linear.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/midPoint/midPoint.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/downwind/downwind.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/weighted/weighted.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/cubic/cubic.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrectionVectors.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrected.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/leastSquaresSkewCorrected/leastSquaresSkewCorrected.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/outletStabilised/outletStabilised.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/reverseLinear/reverseLinear.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/clippedLinear/clippedLinear.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/harmonic/magLongDelta.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/harmonic/harmonic.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/fixedBlended/fixedBlended.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/localBlended/localBlended.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/localMax/localMax.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/localMin/localMin.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/linearFit/linearFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/biLinearFit/biLinearFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/quadraticLinearFit/quadraticLinearFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/quadraticFit/quadraticFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/quadraticLinearUpwindFit/quadraticLinearUpwindFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/quadraticUpwindFit/quadraticUpwindFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/cubicUpwindFit/cubicUpwindFit.C
Making dependency list for source file interpolation/surfaceInterpolation/schemes/linearPureUpwindFit/linearPureUpwindFit.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/limitedSurfaceInterpolationScheme/limitedSurfaceInterpolationSchemes.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/upwind/upwind.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/blended/blended.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/linearUpwind/linearUpwind.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/linearUpwind/linearUpwindV.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/reconCentral/reconCentral.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/Gamma/Gamma.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/SFCD/SFCD.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/Minmod/Minmod.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/vanLeer/vanLeer.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/vanAlbada/vanAlbada.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/OSPRE/OSPRE.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/limitedLinear/limitedLinear.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/limitedCubic/limitedCubic.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/SuperBee/SuperBee.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/QUICK/QUICK.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/MUSCL/MUSCL.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/UMIST/UMIST.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/Phi/Phi.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/filteredLinear/filteredLinear.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/filteredLinear2/filteredLinear2.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/filteredLinear3/filteredLinear3.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/limitWith/limitWith.C
Making dependency list for source file interpolation/surfaceInterpolation/limitedSchemes/CUBISTA/CUBISTA.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/multivariateSurfaceInterpolationScheme/multivariateSurfaceInterpolationSchemes.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/multivariateSelectionScheme/multivariateSelectionSchemes.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/upwind/multivariateUpwind.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/Gamma/multivariateGamma.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/vanLeer/multivariateVanLeer.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/Minmod/multivariateMinmod.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/SuperBee/multivariateSuperBee.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/MUSCL/multivariateMUSCL.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/limitedLinear/multivariateLimitedLinear.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/limitedCubic/multivariateLimitedCubic.C
Making dependency list for source file interpolation/surfaceInterpolation/multivariateSchemes/CUBISTA/multivariateCUBISTA.C
Making dependency list for source file finiteVolume/fv/fv.C
Making dependency list for source file finiteVolume/fvSchemes/fvSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/ddtScheme/ddtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/steadyStateDdtScheme/steadyStateDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/EulerDdtScheme/EulerDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/CoEulerDdtScheme/CoEulerDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/SLTSDdtScheme/SLTSDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/backwardDdtScheme/backwardDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/boundedBackwardDdtScheme/boundedBackwardDdtScheme.C
Making dependency list for source file finiteVolume/ddtSchemes/boundedBackwardDdtScheme/boundedBackwardDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/CrankNicolsonDdtScheme/CrankNicolsonDdtSchemes.C
Making dependency list for source file finiteVolume/ddtSchemes/steadyInertialDdtScheme/steadyInertialDdtSchemes.C
Making dependency list for source file finiteVolume/d2dt2Schemes/d2dt2Scheme/d2dt2Schemes.C
Making dependency list for source file finiteVolume/d2dt2Schemes/steadyStateD2dt2Scheme/steadyStateD2dt2Schemes.C
Making dependency list for source file finiteVolume/d2dt2Schemes/EulerD2dt2Scheme/EulerD2dt2Schemes.C
Making dependency list for source file finiteVolume/d2dt2Schemes/backwardD2dt2Scheme/backwardD2dt2Schemes.C
Making dependency list for source file finiteVolume/divSchemes/divScheme/divSchemes.C
Making dependency list for source file finiteVolume/divSchemes/gaussDivScheme/gaussDivSchemes.C
Making dependency list for source file finiteVolume/divSchemes/gaussDivScheme/vectorGaussDivScheme.C
Making dependency list for source file finiteVolume/gradSchemes/gradScheme/gradSchemes.C
Making dependency list for source file finiteVolume/gradSchemes/gaussGrad/scalarGaussGrad.C
Making dependency list for source file finiteVolume/gradSchemes/gaussGrad/gaussGrads.C
Making dependency list for source file finiteVolume/gradSchemes/beGaussGrad/beGaussGrads.C
Making dependency list for source file finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresVectors.C
Making dependency list for source file finiteVolume/gradSchemes/leastSquaresGrad/scalarLeastSquaresGrad.C
Making dependency list for source file finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresGrads.C
Making dependency list for source file finiteVolume/gradSchemes/extendedLeastSquaresGrad/extendedLeastSquaresVectors.C
Making dependency list for source file finiteVolume/gradSchemes/extendedLeastSquaresGrad/extendedLeastSquaresGrads.C
Making dependency list for source file finiteVolume/gradSchemes/fourthGrad/fourthGrads.C
Making dependency list for source file finiteVolume/gradSchemes/limitedGradSchemes/faceLimitedGrad/faceLimitedGrads.C
Making dependency list for source file finiteVolume/gradSchemes/limitedGradSchemes/cellLimitedGrad/cellLimitedGrads.C
Making dependency list for source file finiteVolume/gradSchemes/limitedGradSchemes/faceMDLimitedGrad/faceMDLimitedGrads.C
Making dependency list for source file finiteVolume/gradSchemes/limitedGradSchemes/cellMDLimitedGrad/cellMDLimitedGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/snGradScheme/snGradSchemes.C
Making dependency list for source file finiteVolume/snGradSchemes/correctedSnGrad/correctedSnGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/limitedSnGrad/limitedSnGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/uncorrectedSnGrad/uncorrectedSnGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/orthogonalSnGrad/orthogonalSnGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/skewCorrectedSnGrad/skewCorrectedSnGrads.C
Making dependency list for source file finiteVolume/snGradSchemes/fourthSnGrad/fourthSnGrads.C
Making dependency list for source file finiteVolume/convectionSchemes/convectionScheme/convectionSchemes.C
Making dependency list for source file finiteVolume/convectionSchemes/gaussConvectionScheme/gaussConvectionSchemes.C
Making dependency list for source file finiteVolume/convectionSchemes/noConvectionScheme/noConvectionSchemes.C
Making dependency list for source file finiteVolume/convectionSchemes/explicitConvectionScheme/explicitConvectionSchemes.C
Making dependency list for source file finiteVolume/convectionSchemes/multivariateGaussConvectionScheme/multivariateGaussConvectionSchemes.C
Making dependency list for source file finiteVolume/adjConvectionSchemes/adjConvectionScheme/adjConvectionSchemes.C
Making dependency list for source file finiteVolume/adjConvectionSchemes/noAdjConvectionScheme/noAdjConvectionSchemes.C
Making dependency list for source file finiteVolume/adjConvectionSchemes/explicitAdjConvectionScheme/explicitAdjConvectionSchemes.C
Making dependency list for source file finiteVolume/laplacianSchemes/laplacianScheme/laplacianSchemes.C
Making dependency list for source file finiteVolume/laplacianSchemes/gaussLaplacianScheme/gaussLaplacianSchemes.C
Making dependency list for source file finiteVolume/laplacianSchemes/noLaplacianScheme/noLaplacianSchemes.C
Making dependency list for source file finiteVolume/fvc/fvcMeshPhi.C
Making dependency list for source file cfdTools/general/findRefCell/findRefCell.C
Making dependency list for source file cfdTools/general/adjustPhi/adjustPhi.C
Making dependency list for source file cfdTools/general/bound/bound.C
Making dependency list for source file cfdTools/general/solutionControl/solutionControl/solutionControl.C
Making dependency list for source file cfdTools/general/solutionControl/simpleControl/simpleControl.C
Making dependency list for source file cfdTools/general/solutionControl/pimpleControl/pimpleControl.C
Making dependency list for source file cfdTools/general/solutionControl/pisoControl/pisoControl.C
Making dependency list for source file cfdTools/general/porousMedia/porousZone.C
Making dependency list for source file cfdTools/general/porousMedia/porousZones.C
Making dependency list for source file cfdTools/general/MRF/MRFZone.C
Making dependency list for source file cfdTools/general/MRF/MRFZones.C
Making dependency list for source file cfdTools/general/SRF/SRFModel/SRFModel/SRFModel.C
Making dependency list for source file cfdTools/general/SRF/SRFModel/SRFModel/newSRFModel.C
Making dependency list for source file cfdTools/general/SRF/SRFModel/rpm/rpm.C
Making dependency list for source file cfdTools/general/SRF/derivedFvPatchFields/SRFVelocityFvPatchVectorField/SRFVelocityFvPatchVectorField.C
Making dependency list for source file cfdTools/general/SRF/derivedFvPatchFields/SRFSurfaceNormalVelocityFvPatchVectorField/SRFSurfaceNormalVelocityFvPatchVectorField.C
Making dependency list for source file cfdTools/general/SRF/derivedFvPatchFields/SRFTotalTemperature/SRFTotalTemperatureFvPatchScalarField.C
Making dependency list for source file cfdTools/general/SRF/derivedFvPatchFields/SRFFlowRateInletVelocity/SRFFlowRateInletVelocityFvPatchVectorField.C
Making dependency list for source file cfdTools/general/SRF/derivedFvPatchFields/SRFTotalPressure/SRFTotalPressureFvPatchScalarField.C
Making dependency list for source file cfdTools/general/fieldSources/pressureGradientExplicitSource/pressureGradientExplicitSource.C
Making dependency list for source file cfdTools/general/fieldSources/timeActivatedExplicitSource/timeActivatedExplicitSource.C
SOURCE=fvMesh/fvPatches/fvPatch/fvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvPatch.o
SOURCE=fvMesh/fvMeshGeometry.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvMeshGeometry.o
SOURCE=fvMesh/fvMesh.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvMesh.o
SOURCE=fvMesh/singleCellFvMesh/singleCellFvMesh.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/singleCellFvMesh.o
SOURCE=fvMesh/fvMeshSubset/fvMeshSubset.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvMeshSubset.o
SOURCE=fvMesh/fvBoundaryMesh/fvBoundaryMesh.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvBoundaryMesh.o
SOURCE=fvMesh/fvPatches/constraint/wedge/wedgeFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wedgeFvPatch.o
SOURCE=fvMesh/fvPatches/fvPatch/newFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/newFvPatch.o
SOURCE=fvMesh/fvPatches/basic/coupled/coupledFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/coupledFvPatch.o
SOURCE=fvMesh/fvPatches/basic/generic/genericFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/genericFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/empty/emptyFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/emptyFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/symmetry/symmetryFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/symmetryFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/cyclic/cyclicFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cyclicFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/processor/processorFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/processorFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cyclicGgiFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/ggiFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/regionCoupleFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/overlapGgiFvPatch.o
SOURCE=fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/mixingPlaneFvPatch.o
SOURCE=fvMesh/fvPatches/derived/directMapped/directMappedFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/directMappedFvPatch.o
SOURCE=fvMesh/fvPatches/derived/wall/wallFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wallFvPatch.o
SOURCE=fvMesh/fvPatches/derived/cohesive/cohesiveFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cohesiveFvPatch.o
SOURCE=fvMesh/fvPatches/derived/directMapped/directMappedWallFvPatch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/directMappedWallFvPatch.o
SOURCE=fvMesh/wallDist/wallPointYPlus/wallPointYPlus.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wallPointYPlus.o
SOURCE=fvMesh/wallDist/nearWallDistNoSearch.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/nearWallDistNoSearch.o
SOURCE=fvMesh/wallDist/nearWallDist.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/nearWallDist.o
SOURCE=fvMesh/wallDist/wallDist.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wallDist.o
SOURCE=fvMesh/wallDist/reflectionVectors.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/reflectionVectors.o
SOURCE=fvMesh/wallDist/wallDistReflection.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wallDistReflection.o
SOURCE=fvMesh/fvMeshMapper/fvPatchMapper.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvPatchMapper.o
SOURCE=fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cellToCellStencil.o
SOURCE=fvMesh/fvMeshMapper/fvSurfaceMapper.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvSurfaceMapper.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from fvMesh/fvPatches/fvPatch/fvPatch.H:39,
                 from fvMesh/fvPatches/fvPatch/newFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/basic/coupled/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/basic/coupled/coupledFvPatch.C:30:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/basic/coupled/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/constraint/wedge/wedgeFvPatch.H:38,
                 from fvMesh/fvPatches/constraint/wedge/wedgeFvPatch.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::wedgePolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/wedge/wedgeFvPatch.C:57:56:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/constraint/symmetry/symmetryFvPatch.H:38,
                 from fvMesh/fvPatches/constraint/symmetry/symmetryFvPatch.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/basic/generic/genericFvPatch.H:38,
                 from fvMesh/fvPatches/basic/generic/genericFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/derived/wall/wallFvPatch.H:38,
                 from fvMesh/fvPatches/derived/wall/wallFvPatch.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/processor/processorFvPatch.H:38,
                 from fvMesh/fvPatches/constraint/processor/processorFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/processor/processorFvPatch.H:85:67:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/derived/directMapped/directMappedFvPatch.H:38,
                 from fvMesh/fvPatches/derived/directMapped/directMappedFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/wallFvPatch.H:38,
                 from fvMesh/fvPatches/derived/directMapped/directMappedWallFvPatch.H:38,
                 from fvMesh/fvPatches/derived/directMapped/directMappedWallFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorTemplate.H:44,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/point.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/wallPoint.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/wallPointData.H:42,
                 from fvMesh/wallDist/wallPointYPlus/wallPointYPlus.H:44,
                 from fvMesh/wallDist/wallPointYPlus/wallPointYPlus.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.H:39,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CFCCellToCellStencil.o
SOURCE=fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CPCCellToCellStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from lnInclude/ggiFvPatch.H:41,
                 from fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.H:44,
                 from fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from lnInclude/ggiFvPatch.H:41,
                 from fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:48,
                 from fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::cyclicGgiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/cyclicGgiPolyPatch.H:164:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.H:89:72:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiPolyPatch; From = const Foam::overlapGgiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatch.H:258:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:98:74:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiFvPatch; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:131:45:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/ggi/ggiFvPatch.H:41,
                 from fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiFvPatch; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:113:46:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiFvPatch; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:204:39:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiLduInterface; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:230:44:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CECCellToCellStencil.o
SOURCE=fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cellToFaceStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/fullStencils/CFCCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CFCCellToFaceStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from lnInclude/fvMesh.H:50,
                 from fvMesh/fvBoundaryMesh/fvBoundaryMesh.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
fvMesh/fvBoundaryMesh/fvBoundaryMesh.C:103:69:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/fullStencils/CECCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CECCellToFaceStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.H:44,
                 from fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::mixingPlanePolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mixingPlanePolyPatch.H:271:62:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.H:94:76:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/constraint/empty/emptyFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/empty/emptyFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatch; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:128:47:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneLduInterface; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:170:52:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/fullStencils/CPCCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CPCCellToFaceStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/morphFieldMapper.H:35,
                 from fvMesh/fvMeshMapper/fvSurfaceMapper.H:38,
                 from fvMesh/fvMeshMapper/fvSurfaceMapper.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/cyclic/cyclicFvPatch.H:38,
                 from fvMesh/fvPatches/constraint/cyclic/cyclicFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/cyclic/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fvMesh/fvPatches/derived/cohesive/cohesiveFvPatch.H:38,
                 from fvMesh/fvPatches/derived/cohesive/cohesiveFvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cohesivePolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/derived/cohesive/cohesiveFvPatch.H:86:55:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/gatherScatter.C:92:27:   required from 'static void Foam::Pstream::gather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<double>; BinaryOp = Foam::sumOp<Foam::Field<double> >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PstreamReduceOps.H:58:20:   required from 'void Foam::reduce(const Foam::List<Foam::Pstream::commsStruct>&, T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<double>; BinaryOp = Foam::sumOp<Foam::Field<double> >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PstreamReduceOps.H:75:15:   required from 'void Foam::reduce(T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<double>; BinaryOp = Foam::sumOp<Foam::Field<double> >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:82:15:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::expandData(const Foam::Field<Type>&) const [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:110:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:125:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:89:38:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/FECCellToFaceStencil.o
SOURCE=fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/extendedCellToFaceStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFields.H:37,
                 from lnInclude/fvPatchFieldMapper.H:35,
                 from fvMesh/fvMeshMapper/fvPatchMapper.H:38,
                 from fvMesh/fvMeshMapper/fvPatchMapper.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/gatherScatter.C:92:27:   required from 'static void Foam::Pstream::gather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<Foam::Vector<double> >; BinaryOp = Foam::sumOp<Foam::Field<Foam::Vector<double> > >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PstreamReduceOps.H:58:20:   required from 'void Foam::reduce(const Foam::List<Foam::Pstream::commsStruct>&, T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<Foam::Vector<double> >; BinaryOp = Foam::sumOp<Foam::Field<Foam::Vector<double> > >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PstreamReduceOps.H:75:15:   required from 'void Foam::reduce(T&, const BinaryOp&, int, Foam::label) [with T = Foam::Field<Foam::Vector<double> >; BinaryOp = Foam::sumOp<Foam::Field<Foam::Vector<double> > >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:82:15:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::expandData(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:110:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:137:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:131:60:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:135:9:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = double; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:162:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.H:109:58:   required from 'Foam::tmp<Foam::Field<Type> > Foam::cyclicGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:116:38:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:456:23:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::tmp<Foam::Field<Type2> >&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:118:16:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:125:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:89:38:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:456:23:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::tmp<Foam::Field<Type2> >&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:118:16:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.H:125:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/overlapGgi/overlapGgiFvPatch.C:89:38:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFields.H:37,
                 from lnInclude/fvPatchFieldMapper.H:35,
                 from fvMesh/singleCellFvMesh/singleCellFvMesh.H:41,
                 from fvMesh/singleCellFvMesh/singleCellFvMesh.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:162:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:197:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.H:115:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::cyclicGgiFvPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:157:9:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:260:9:   required from 'const labelList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::uncoveredMasterFaces() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelList = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:581:9:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::bridgeMaster(const Foam::Field<Type2>&, Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:237:17:   required from 'void Foam::ggiPolyPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = double]'
lnInclude/ggiFvPatch.H:154:60:   required from 'void Foam::ggiFvPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:74:47:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:260:9:   required from 'const labelList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::uncoveredMasterFaces() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelList = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:581:9:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::bridgeMaster(const Foam::Field<Type2>&, Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:237:17:   required from 'void Foam::ggiPolyPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = double]'
lnInclude/ggiFvPatch.H:154:60:   required from 'void Foam::ggiFvPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/cyclicGgi/cyclicGgiFvPatch.C:74:47:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:256:56:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:256:56:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = double; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:162:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.H:137:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:94:34:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/extendedCentredCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/extendedCentredCellToFaceStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:162:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:197:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.H:143:53:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/ggi/ggiFvPatch.C:183:9:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/extendedUpwindCellToFaceStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from lnInclude/fvMesh.H:50,
                 from fvMesh/fvMeshSubset/fvMeshSubset.H:57,
                 from fvMesh/fvMeshSubset/fvMeshSubset.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1387:70:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = int; CombineOp = Foam::eqOp<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = int]'
fvMesh/singleCellFvMesh/singleCellFvMesh.C:86:63:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvMeshSubset/fvMeshSubset.C:116:57:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1477:63:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = int; CombineOp = Foam::eqOp<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = int]'
fvMesh/singleCellFvMesh/singleCellFvMesh.C:86:63:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
fvMesh/fvMeshSubset/fvMeshSubset.C:176:50:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOList.C:58:30:   required from 'Foam::IOList<T>::IOList(const Foam::IOobject&, Foam::label) [with T = Foam::List<int>; Foam::label = int]'
fvMesh/singleCellFvMesh/singleCellFvMesh.C:475:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/wallDist/nearWallDist.H:39,
                 from fvMesh/wallDist/nearWallDist.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/wallDist/wallDist.H:64,
                 from fvMesh/wallDist/wallDist.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from fvMesh/fvPatches/fvPatch/fvPatch.H:39,
                 from fvMesh/fvPatches/fvPatch/fvPatch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/wallDist/reflectionVectors.H:38,
                 from fvMesh/wallDist/reflectionVectors.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/wallDist/nearWallDistNoSearch.H:39,
                 from fvMesh/wallDist/nearWallDistNoSearch.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/wallDist/reflectionVectors.H:38,
                 from fvMesh/wallDist/wallDistReflection.H:38,
                 from fvMesh/wallDist/wallDistReflection.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationAddressing.C:179:65:   required from 'void Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationTemplate.C:286:9:   required from 'const labelListList& Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::masterPatchToProfileAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:178:78:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationAddressing.C:179:65:   required from 'void Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationTemplate.C:286:9:   required from 'const labelListList& Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::masterPatchToProfileAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:178:78:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:86:28:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationAddressing.C:179:65:   required from 'void Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationTemplate.C:286:9:   required from 'const labelListList& Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::masterPatchToProfileAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/mixingPlane/mixingPlaneFvPatch.C:178:78:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/centredCECCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/centredCECCellToFaceStencilObject.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/coupledFvPatch.H:39,
                 from fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.H:42,
                 from fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::word> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::word]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/gatherScatterList.C:116:27:   required from 'static void Foam::Pstream::gatherList(const Foam::List<Foam::Pstream::commsStruct>&, Foam::List<T>&, int, Foam::label) [with T = Foam::List<Foam::word>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/gatherScatterList.C:210:19:   required from 'static void Foam::Pstream::gatherList(Foam::List<T>&, int, Foam::label) [with T = Foam::List<Foam::word>; Foam::label = int]'
fvMesh/fvMeshSubset/fvMeshSubset.C:1301:39:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplePolyPatch; From = const Foam::regionCouplePolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatch.H:284:63:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplePolyPatch; From = const Foam::polyPatch]':
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.H:94:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCoupleFvPatch; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:237:48:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiLduInterface; From = const Foam::fvPatch]':
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:265:44:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedFieldIO.C:45:17:   required from 'void Foam::DimensionedField<Type, GeoMesh>::readField(const Foam::dictionary&, const Foam::word&) [with Type = Foam::Vector<double>; GeoMesh = Foam::volMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:59:47:   required from 'Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricBoundaryField> Foam::GeometricField<Type, PatchField, GeoMesh>::readField(const Foam::dictionary&) [with Type = Foam::Vector<double>; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:107:36:   required from 'Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricBoundaryField> Foam::GeometricField<Type, PatchField, GeoMesh>::readField(Foam::Istream&) [with Type = Foam::Vector<double>; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:125:70:   required from 'bool Foam::GeometricField<Type, PatchField, GeoMesh>::readIfPresent() [with Type = Foam::Vector<double>; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:279:5:   required from 'Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricField(const Foam::IOobject&, const Mesh&, const Foam::dimensioned<Type>&, const Foam::word&) [with Type = Foam::Vector<double>; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh; Foam::GeometricField<Type, PatchField, GeoMesh>::Mesh = Foam::fvMesh]'
fvMesh/wallDist/reflectionVectors.C:44:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/centredCFCCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/centredCFCCellToFaceStencilObject.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMesh.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/centredCPCCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/centredCPCCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:727:53:   required from 'void Foam::FaceCellWave<Type>::handleCyclicPatches() [with Type = Foam::wallPointData<Foam::Vector<double> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:1068:9:   required from 'Foam::label Foam::FaceCellWave<Type>::iterate(Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:862:5:   required from 'Foam::FaceCellWave<Type>::FaceCellWave(const Foam::polyMesh&, const labelList&, const Foam::List<T>&, Foam::UList<T>&, Foam::UList<T>&, Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::labelList = Foam::List<int>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MeshWave.C:64:5:   required from 'Foam::MeshWave<Type>::MeshWave(const Foam::polyMesh&, const labelList&, const Foam::List<T>&, Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::labelList = Foam::List<int>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/patchDataWave.C:223:28:   required from 'void Foam::patchDataWave<TransferType>::correct() [with TransferType = Foam::wallPointData<Foam::Vector<double> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/patchDataWave.C:189:5:   required from 'Foam::patchDataWave<TransferType>::patchDataWave(const Foam::polyMesh&, const labelHashSet&, const Foam::UPtrList<Foam::Field<typename TransferType::dataType> >&, bool) [with TransferType = Foam::wallPointData<Foam::Vector<double> >; Foam::labelHashSet = Foam::HashSet<int, Foam::Hash<int> >; typename TransferType::dataType = Foam::Vector<double>]'
fvMesh/wallDist/wallDistData.C:105:33:   required from 'void Foam::wallDistData<TransferType>::correct() [with TransferType = Foam::wallPointData<Foam::Vector<double> >]'
fvMesh/wallDist/wallDistReflection.C:53:43:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:565:56:   required from 'void Foam::FaceCellWave<Type>::handleProcPatches() [with Type = Foam::wallPointData<Foam::Vector<double> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:1073:9:   required from 'Foam::label Foam::FaceCellWave<Type>::iterate(Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/FaceCellWave.C:862:5:   required from 'Foam::FaceCellWave<Type>::FaceCellWave(const Foam::polyMesh&, const labelList&, const Foam::List<T>&, Foam::UList<T>&, Foam::UList<T>&, Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::labelList = Foam::List<int>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MeshWave.C:64:5:   required from 'Foam::MeshWave<Type>::MeshWave(const Foam::polyMesh&, const labelList&, const Foam::List<T>&, Foam::label) [with Type = Foam::wallPointData<Foam::Vector<double> >; Foam::labelList = Foam::List<int>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/patchDataWave.C:223:28:   required from 'void Foam::patchDataWave<TransferType>::correct() [with TransferType = Foam::wallPointData<Foam::Vector<double> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude/patchDataWave.C:189:5:   required from 'Foam::patchDataWave<TransferType>::patchDataWave(const Foam::polyMesh&, const labelHashSet&, const Foam::UPtrList<Foam::Field<typename TransferType::dataType> >&, bool) [with TransferType = Foam::wallPointData<Foam::Vector<double> >; Foam::labelHashSet = Foam::HashSet<int, Foam::Hash<int> >; typename TransferType::dataType = Foam::Vector<double>]'
fvMesh/wallDist/wallDistData.C:105:33:   required from 'void Foam::wallDistData<TransferType>::correct() [with TransferType = Foam::wallPointData<Foam::Vector<double> >]'
fvMesh/wallDist/wallDistReflection.C:53:43:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/centredFECCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/centredFECCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::cyclicGgiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/cyclicGgiPolyPatch.H:164:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicGgiFvPatch.H:89:72:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCECCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/upwindCECCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.H:39,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.H:37,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:291:55:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:291:55:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.H:39,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CECCellToFaceStencil.H:38,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CECCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplePolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatchTemplates.C:161:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplePolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatchTemplates.C:196:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplePolyPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.H:152:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCoupleFvPatch::interpolate(const Foam::tmp<Foam::Field<Type> >&) const [with Type = Foam::Vector<double>]'
fvMesh/fvPatches/constraint/regionCouple/regionCoupleFvPatch.C:197:13:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.H:39,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.H:37,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1387:70:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = int; CombineOp = Foam::eqOp<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = int]'
fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.C:81:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1477:63:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = int; CombineOp = Foam::eqOp<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = int]'
fvMesh/extendedStencil/cellToCell/fullStencils/CFCCellToCellStencil.C:81:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/cellToCellStencil.H:39,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.H:37,
                 from fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.H:39,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CPCCellToFaceStencil.H:38,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CPCCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.H:39,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CFCCellToFaceStencil.H:38,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/CFCCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:141:70:   required from 'static void Foam::syncTools::syncPointMap(const Foam::polyMesh&, Foam::Map<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToCellStencil::unionEqOp]'
fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.C:65:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:229:63:   required from 'static void Foam::syncTools::syncPointMap(const Foam::polyMesh&, Foam::Map<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToCellStencil::unionEqOp]'
fvMesh/extendedStencil/cellToCell/fullStencils/CPCCellToCellStencil.C:65:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.H:39,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:492:70:   required from 'static void Foam::syncTools::syncEdgeMap(const Foam::polyMesh&, Foam::EdgeMap<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToCellStencil::unionEqOp]'
fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.C:65:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:588:63:   required from 'static void Foam::syncTools::syncEdgeMap(const Foam::polyMesh&, Foam::EdgeMap<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToCellStencil::unionEqOp]'
fvMesh/extendedStencil/cellToCell/fullStencils/CECCellToCellStencil.C:65:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCFCCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/upwindCFCCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCPCCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/upwindCPCCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedFieldIO.C:45:17:   required from 'void Foam::DimensionedField<Type, GeoMesh>::readField(const Foam::dictionary&, const Foam::word&) [with Type = Foam::Vector<double>; GeoMesh = Foam::surfaceMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:59:47:   required from 'Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricBoundaryField> Foam::GeometricField<Type, PatchField, GeoMesh>::readField(const Foam::dictionary&) [with Type = Foam::Vector<double>; PatchField = Foam::fvsPatchField; GeoMesh = Foam::surfaceMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:107:36:   required from 'Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricBoundaryField> Foam::GeometricField<Type, PatchField, GeoMesh>::readField(Foam::Istream&) [with Type = Foam::Vector<double>; PatchField = Foam::fvsPatchField; GeoMesh = Foam::surfaceMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:125:70:   required from 'bool Foam::GeometricField<Type, PatchField, GeoMesh>::readIfPresent() [with Type = Foam::Vector<double>; PatchField = Foam::fvsPatchField; GeoMesh = Foam::surfaceMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GeometricField.C:336:5:   required from 'Foam::GeometricField<Type, PatchField, GeoMesh>::GeometricField(const Foam::IOobject&, const Mesh&, const Foam::dimensionSet&, const Foam::Field<Type>&, const Foam::PtrList<PatchField<Type> >&) [with Type = Foam::Vector<double>; PatchField = Foam::fvsPatchField; GeoMesh = Foam::surfaceMesh; Foam::GeometricField<Type, PatchField, GeoMesh>::Mesh = Foam::fvMesh]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/SlicedGeometricField.C:223:5:   required from 'Foam::SlicedGeometricField<Type, PatchField, SlicedPatchField, GeoMesh>::SlicedGeometricField(const Foam::IOobject&, const Mesh&, const Foam::dimensionSet&, const Foam::Field<Type>&, bool) [with Type = Foam::Vector<double>; PatchField = Foam::fvsPatchField; SlicedPatchField = Foam::slicedFvsPatchField; GeoMesh = Foam::surfaceMesh; Foam::SlicedGeometricField<Type, PatchField, SlicedPatchField, GeoMesh>::Mesh = Foam::fvMesh]'
fvMesh/fvMeshGeometry.C:73:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1387:70:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C:373:69:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1477:63:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C:373:69:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/upwindFECCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/upwindFECCellToFaceStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1448:32:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.C:373:69:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/cellToFace/MeshObjects/pureUpwindCFCCellToFaceStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pureUpwindCFCCellToFaceStencilObject.o
SOURCE=fvMesh/extendedStencil/faceToCell/fullStencils/faceToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/faceToCellStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/cellToFaceStencil.H:39,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.H:38,
                 from fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:492:70:   required from 'static void Foam::syncTools::syncEdgeMap(const Foam::polyMesh&, Foam::EdgeMap<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToFaceStencil::unionEqOp]'
fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.C:69:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:588:63:   required from 'static void Foam::syncTools::syncEdgeMap(const Foam::polyMesh&, Foam::EdgeMap<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::cellToFaceStencil::unionEqOp]'
fvMesh/extendedStencil/cellToFace/fullStencils/FECCellToFaceStencil.C:69:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/CFCFaceToCellStencil.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencil.H:51,
                 from fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencil.H:51,
                 from fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:49,
                 from fvMesh/extendedStencil/cellToFace/extendedCentredCellToFaceStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1387:70:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C:318:64:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1477:63:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C:318:64:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedCentredCellToFaceStencil.H:37,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCECCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCECCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1448:32:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C:318:64:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = Foam::Vector<double>]'
fvMesh/extendedStencil/cellToFace/extendedCellToFaceStencilTemplates.C:60:5:   required from 'static void Foam::extendedCellToFaceStencil::collectData(const Foam::mapDistribute&, const labelListList&, const Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh>&, Foam::List<Foam::List<T> >&) [with T = Foam::Vector<double>; Foam::labelListList = Foam::List<Foam::List<int> >]'
fvMesh/extendedStencil/cellToFace/extendedUpwindCellToFaceStencil.C:445:71:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedCentredCellToFaceStencil.H:37,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredFECCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredFECCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedCentredCellToFaceStencil.H:37,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCFCCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCFCCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/faceToCell/extendedFaceToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/extendedFaceToCellStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fvMesh/extendedStencil/faceToCell/extendedCentredFaceToCellStencil.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/extendedCentredFaceToCellStencil.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/faceToCell/fullStencils/faceToCellStencil.H:39,
                 from fvMesh/extendedStencil/faceToCell/fullStencils/faceToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedCentredCellToFaceStencil.H:37,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCPCCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/centredCPCCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fvMesh/extendedStencil/faceToCell/MeshObjects/centredCFCFaceToCellStencilObject.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/centredCFCFaceToCellStencilObject.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCECCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCECCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/fvPatchField/fvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvPatchFields.o
SOURCE=fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Pstream.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/globalIndex.H:43,
                 from fvMesh/extendedStencil/faceToCell/fullStencils/faceToCellStencil.H:39,
                 from fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.H:37,
                 from fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/basicSymmetryFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/basicSymmetryFvPatchScalarField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1387:70:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C:83:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1477:63:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C:83:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/calculatedFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1448:32:   required from 'static void Foam::syncTools::syncBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, const CombineOp&, bool) [with T = Foam::List<int>; CombineOp = Foam::eqOp<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/syncToolsTemplates.C:1561:25:   required from 'static void Foam::syncTools::swapBoundaryFaceList(const Foam::polyMesh&, Foam::UList<T>&, bool) [with T = Foam::List<int>]'
fvMesh/extendedStencil/faceToCell/fullStencils/CFCFaceToCellStencil.C:83:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCFCCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCFCCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/calculatedFvPatchVectorNFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCPCCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindCPCCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/coupledFvPatchFields.o
SOURCE=fields/fvPatchFields/basic/coupled/coupledFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/coupledFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindFECCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/upwindFECCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/directionMixedFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedCellToFaceStencil.H:51,
                 from lnInclude/extendedUpwindCellToFaceStencil.H:47,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/pureUpwindCFCCellToFaceStencilObject.H:36,
                 from fvMesh/extendedStencil/cellToFace/MeshObjects/pureUpwindCFCCellToFaceStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedGradientFvPatchFields.o
SOURCE=fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedGradientFvPatchVectorNFields.o
SOURCE=fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedValueFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedValueFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/generic/genericFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/genericFvPatchFields.o
SOURCE=fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/genericFvPatchVectorNFields.o
SOURCE=fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/mixedFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/slicedFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.H:30,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.H:30,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.H:30,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:48,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.H:30,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/basic/transform/transformFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/transformFvPatchFields.o
SOURCE=fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/transformFvPatchScalarField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/basic/transform/transformFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/transformFvPatchVectorNFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fvMesh/extendedStencil/faceToCell/extendedFaceToCellStencil.H:40,
                 from fvMesh/extendedStencil/faceToCell/extendedFaceToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:49,
                 from fvMesh/extendedStencil/faceToCell/extendedCentredFaceToCellStencil.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/zeroGradientFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/extendedFaceToCellStencil.H:40,
                 from lnInclude/extendedCentredFaceToCellStencil.H:37,
                 from fvMesh/extendedStencil/faceToCell/MeshObjects/centredCFCFaceToCellStencilObject.H:36,
                 from fvMesh/extendedStencil/faceToCell/MeshObjects/centredCFCFaceToCellStencilObject.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from fields/fvPatchFields/fvPatchField/fvPatchField.H:47,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFieldsFwd.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/fvPatchField/fvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/zeroGradientFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cyclicFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchField.H:44,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchField.H:44,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchField.H:44,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchField.H:44,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::basicSymmetryFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/basicSymmetry/basicSymmetryFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cyclicFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/emptyFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/empty/emptyFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/emptyFvPatchVectorNFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<double>; Type = double]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:61:51:   required from 'Foam::directionMixedFvPatchField<Type>::directionMixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directionMixedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/jumpCyclicFvPatchFields.o
SOURCE=fields/fvPatchFields/constraint/processor/processorFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/processorFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchField.H:44,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:194:29:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:234:29:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:274:29:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:311:29:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<double>; Type = double]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/processorFvPatchScalarField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/transform/transformFvPatchField.H:38,
                 from fields/fvPatchFields/basic/transform/transformFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:62:15:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:62:15:   required from 'Foam::genericFvPatchField<Type>::genericFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::genericFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::genericFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/generic/genericFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:60:51:   required from 'Foam::mixedFvPatchField<Type>::mixedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/directionMixed/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchField.C:89:35:   required from 'Foam::slicedFvPatchField<Type>::slicedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slicedFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/sliced/slicedFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/processorFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.H:38,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/mixed/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/symmetryFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wedgeFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wedgeFvPatchScalarField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::genericFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/basic/generic/genericFvPatchField.C:667:50:   required from 'void Foam::genericFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/generic/genericFvPatchField.C:658:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/wedgeFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:43:48:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/ggiFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/ggiFvPatchVectorNFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:43:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/jumpGgiFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
lnInclude/processorFvPatch.H:85:67:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
lnInclude/processorFvPatch.H:85:67:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/jumpCyclic/jumpCyclicFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:44:49:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::processorFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/cyclicGgiFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:50:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::processorFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:33:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:33:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:33:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:33:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::Tensor<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::Tensor<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DiagTensorTemplate.H:42,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/diagTensor.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:37,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/TensorTemplate.H:57:7: note: 'class Foam::Tensor<double>' declared here
 class Tensor
       ^~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::DiagTensor<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::DiagTensor<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/diagTensor.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:37,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DiagTensorTemplate.H:54:7: note: 'class Foam::DiagTensor<double>' declared here
 class DiagTensor
       ^~~~~~~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::SymmTensor4thOrder<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::SymmTensor4thOrder<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/symmTensor4thOrder.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/SymmTensor4thOrderTemplate.H:70:7: note: 'class Foam::SymmTensor4thOrder<double>' declared here
 class SymmTensor4thOrder
       ^~~~~~~~~~~~~~~~~~
SOURCE=fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/overlapGgiFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::SymmTensor<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::SymmTensor<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/TensorTemplateI.H:26,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/TensorTemplate.H:209,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DiagTensorTemplate.H:42,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/diagTensor.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:37,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/SymmTensorTemplate.H:54:7: note: 'class Foam::SymmTensor<double>' declared here
 class SymmTensor
       ^~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::SphericalTensor<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::SphericalTensor<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/sphericalTensor.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/SphericalTensorTemplate.H:52:7: note: 'class Foam::SphericalTensor<double>' declared here
 class SphericalTensor
       ^~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::Vector<double>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::Vector<double>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/fieldTypes.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:48,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchScalarField.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorTemplate.H:58:7: note: 'class Foam::Vector<double>' declared here
 class Vector
       ^~~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.H:37,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.H:37,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.H:37,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.H:37,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::wedgeFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:164:40:   required from 'void Foam::wedgeFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:111:5:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchField.C:86:48:   required from 'Foam::symmetryFvPatchField<Type>::symmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::symmetryFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/symmetry/symmetryFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/mixingPlaneFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:33:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:57:42:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::ggiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from lnInclude/ggiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.H:37,
                 from fields/fvPatchFields/constraint/jumpGgi/jumpGgiFvPatchFields.C:34:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:57:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::ggiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/jumpMixingPlaneFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::cyclicGgiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/cyclicGgiPolyPatch.H:164:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicGgiFvPatch.H:89:72:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.H:42,
                 from fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:29:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiPolyPatch; From = const Foam::overlapGgiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatch.H:258:61:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiPolyPatch; From = const Foam::polyPatch]':
lnInclude/overlapGgiFvPatch.H:98:74:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicGgiFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:50:54:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/ggiFvPatch.H:137:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:176:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:160:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/ggiFvPatch.H:137:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:176:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:160:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:50:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::overlapGgiFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:46:56:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:46:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistribute.H:232:21:   required from 'void Foam::mapDistribute::distribute(Foam::List<T>&, int) const [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:92:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::fastExpand(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:162:21:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
lnInclude/cyclicGgiFvPatch.H:109:58:   required from 'Foam::tmp<Foam::Field<Type> > Foam::cyclicGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:109:59:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:63:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:63:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:63:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:63:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchField.C:63:55:   required from 'Foam::cyclicGgiFvPatchField<Type>::cyclicGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicGgiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:137:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:59:57:   required from 'Foam::overlapGgiFvPatchField<Type>::overlapGgiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::overlapGgiFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchFields.C:40:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
lnInclude/cyclicGgiFvPatch.H:109:58:   required from 'Foam::tmp<Foam::Field<Type> > Foam::cyclicGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:73:57:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = double; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
lnInclude/cyclicGgiFvPatch.H:109:58:   required from 'Foam::tmp<Foam::Field<Type> > Foam::cyclicGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = double]'
fields/fvPatchFields/constraint/cyclicGgi/cyclicGgiFvPatchFields.C:73:57:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.H:45,
                 from fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:36:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::mixingPlanePolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mixingPlanePolyPatch.H:271:62:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::polyPatch]':
lnInclude/mixingPlaneFvPatch.H:94:76:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.H:47,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C:38:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.H:47,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C:38:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.H:47,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C:38:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.H:47,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C:38:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:203:58:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:207:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:456:23:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::tmp<Foam::Field<Type2> >&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:118:16:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/overlapGgiFvPatch.H:125:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:151:47:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:135:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:456:23:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::tmp<Foam::Field<Type2> >&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/overlapGgiPolyPatchTemplates.C:118:16:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/overlapGgiFvPatch.H:125:59:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:151:47:   required from 'Foam::tmp<Foam::Field<Type> > Foam::overlapGgiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/overlapGgi/overlapGgiFvPatchField.C:135:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:227:29:   required from 'Foam::mixingPlaneFvPatchField<Type>::mixingPlaneFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::mixingPlaneFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchFields.C:47:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from lnInclude/mixingPlaneFvPatchField.H:44,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchField.H:46,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.H:47,
                 from fields/fvPatchFields/constraint/jumpMixingPlane/jumpMixingPlaneFvPatchFields.C:38:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::mixingPlanePolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mixingPlanePolyPatch.H:271:62:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlanePolyPatch; From = const Foam::polyPatch]':
lnInclude/mixingPlaneFvPatch.H:94:76:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixingPlaneFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:350:54:   required from 'void Foam::mixingPlaneFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:339:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationTemplate.C:342:9:   required from 'const labelListList& Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::slavePatchToProfileAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolate.C:303:9:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mixingPlanePolyPatchTemplates.C:282:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlanePolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/mixingPlaneFvPatch.H:140:60:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlaneFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:417:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlaneFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:403:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, Foam::Field<Foam::Vector<double> > >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolationTemplate.C:342:9:   required from 'const labelListList& Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::slavePatchToProfileAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/MixingPlaneInterpolate.C:303:9:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::MixingPlaneInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mixingPlanePolyPatchTemplates.C:282:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlanePolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/mixingPlaneFvPatch.H:140:60:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlaneFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:417:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::mixingPlaneFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/mixingPlane/mixingPlaneFvPatchField.C:403:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/regionCouplingFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/calculatedFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchField.H:38,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/generic/genericFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/activeBaffleVelocityFvPatchVectorField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.H:41,
                 from fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:32:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplePolyPatch; From = const Foam::regionCouplePolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatch.H:284:63:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplePolyPatch; From = const Foam::polyPatch]':
lnInclude/regionCoupleFvPatch.H:94:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/coupled/coupledFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCoupleFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:69:60:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 2>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 3>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 4>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 6>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 8>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:52:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:52:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:52:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:73:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<double>; Type = double]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:52:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/calculatedFvPatchField.C:75:50:   required from 'Foam::calculatedFvPatchField<Type>::calculatedFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::calculatedFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/basic/calculated/calculatedFvPatchVectorNFields.C:52:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedValueFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedValue/fixedValueFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:90:21:   required from 'Foam::regionCouplingFvPatchField<Type>::regionCouplingFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::regionCouplingFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/advectiveFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/directMappedFixedValueFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Vector<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::regionCouplingFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:200:5:   required from 'const Foam::regionCouplingFvPatchField<Type>& Foam::regionCouplingFvPatchField<Type>::shadowPatchField() const [with Type = double]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:210:26:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = double]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:260:9:   required from 'const labelList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::uncoveredMasterFaces() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelList = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:581:9:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::bridgeMaster(const Foam::Field<Type2>&, Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatchTemplates.C:236:17:   required from 'void Foam::regionCouplePolyPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/regionCoupleFvPatch.H:163:59:   required from 'void Foam::regionCoupleFvPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:232:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:260:9:   required from 'const labelList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::uncoveredMasterFaces() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelList = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:581:9:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::bridgeMaster(const Foam::Field<Type2>&, Foam::Field<Type2>&) const [with Type = Foam::Tensor<double>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regionCouplePolyPatchTemplates.C:236:17:   required from 'void Foam::regionCouplePolyPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
lnInclude/regionCoupleFvPatch.H:163:59:   required from 'void Foam::regionCoupleFvPatch::bridge(const Foam::Field<Type>&, Foam::Field<Type>&) const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:232:9:   required from 'Foam::tmp<Foam::Field<Type> > Foam::regionCouplingFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/constraint/regionCoupling/regionCouplingFvPatchField.C:208:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/activeBaffleVelocity/activeBaffleVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:43:48:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 2>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 3>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:43:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 4>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 6>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 8>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/empty/emptyFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/zeroGradientFvPatchField.C:68:35:   required from 'Foam::zeroGradientFvPatchField<Type>::zeroGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::zeroGradientFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/basic/zeroGradient/zeroGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchField.C:89:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::cyclicFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/cyclic/cyclicFvPatchVectorNFields.C:99:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::polyPatch]':
lnInclude/processorFvPatch.H:85:67:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:44:49:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 2>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 3>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 4>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 6>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 8>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:46:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:50:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 2>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 3>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 4>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
fields/fvPatchFields/derived/advective/advectiveFvPatchField.H: In member function 'bool& Foam::advectiveFvPatchField<Type>::inletOutlet()':
fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:224:24: error: cannot bind non-const lvalue reference of type 'bool&' to an rvalue of type 'bool'
                 return inletOutlet_;
                        ^~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/foamTime.H:48,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistryTemplates.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:234,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/fvPatchField.C:28,
                 from lnInclude/fvPatchField.H:537,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Switch.H:171:9: note:   after user-defined conversion: 'Foam::Switch::operator bool() const'
         operator bool() const
         ^~~~~~~~
In file included from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
fields/fvPatchFields/derived/advective/advectiveFvPatchField.H: In member function 'bool& Foam::advectiveFvPatchField<Type>::correctSupercritical()':
fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:237:24: error: cannot bind non-const lvalue reference of type 'bool&' to an rvalue of type 'bool'
                 return correctSupercritical_;
                        ^~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/foamTime.H:48,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistryTemplates.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:234,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyMesh.H:43,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/fvPatchField.C:28,
                 from lnInclude/fvPatchField.H:537,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Switch.H:171:9: note:   after user-defined conversion: 'Foam::Switch::operator bool() const'
         operator bool() const
         ^~~~~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 6>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 8>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:48:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 2>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 3>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:127:24:   required from 'Foam::processorFvPatchField<Type>::processorFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::processorFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 4>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 6>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 8>; Foam::label = int]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:71:41:   required from 'Foam::fixedGradientFvPatchField<Type>::fixedGradientFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchVectorNFields.C:50:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/basic/transform/transformFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/basic/transform/transformFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/directMappedVelocityFluxFixedValueFvPatchField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:33,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::VectorN<double, 8>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::VectorN<double, 8>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from lnInclude/volVectorNFieldsFwd.H:39,
                 from lnInclude/volVectorNFields.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:53:7: note: 'class Foam::VectorN<double, 8>' declared here
 class VectorN
       ^~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:33,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::VectorN<double, 6>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::VectorN<double, 6>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from lnInclude/volVectorNFieldsFwd.H:39,
                 from lnInclude/volVectorNFields.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:53:7: note: 'class Foam::VectorN<double, 6>' declared here
 class VectorN
       ^~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:33,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::VectorN<double, 4>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::VectorN<double, 4>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from lnInclude/volVectorNFieldsFwd.H:39,
                 from lnInclude/volVectorNFields.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:53:7: note: 'class Foam::VectorN<double, 4>' declared here
 class VectorN
       ^~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:33,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::VectorN<double, 3>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::VectorN<double, 3>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from lnInclude/volVectorNFieldsFwd.H:39,
                 from lnInclude/volVectorNFields.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:53:7: note: 'class Foam::VectorN<double, 3>' declared here
 class VectorN
       ^~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterface.H:141,
                 from lnInclude/processorFvPatch.H:39,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchField.H:50,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:33,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C: In instantiation of 'void Foam::processorLduInterface::receive(Foam::Pstream::commsTypes, Foam::UList<T>&) const [with Type = Foam::VectorN<double, 2>]':
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:302:13:   required from 'void Foam::processorFvPatchField<Type>::evaluate(Foam::Pstream::commsTypes) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/processor/processorFvPatchField.C:278:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorLduInterfaceTemplates.C:110:15: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class Foam::VectorN<double, 2>' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
         memcpy(f.begin(), receiveBuf_.begin(), f.byteSize());
         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector2.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorNFieldTypes.H:33,
                 from lnInclude/volVectorNFieldsFwd.H:39,
                 from lnInclude/volVectorNFields.H:38,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/processor/processorFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorN.H:53:7: note: 'class Foam::VectorN<double, 2>' declared here
 class VectorN
       ^~~~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/fan/fanFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fanFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:224:21:   required from 'Foam::directMappedFixedValueFvPatchField<Type>::directMappedFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::directMappedFixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/buoyantPressureFvPatchScalarField.o
SOURCE=fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedFluxPressureFvPatchScalarField.o
SOURCE=fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedInternalValueFvPatchFields.o
SOURCE=fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedNormalSlipFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from lnInclude/volFields.H:37,
                 from lnInclude/volVectorNFields.H:37,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.H:29,
                 from fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directMappedPatchBase; From = const Foam::polyPatch]':
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:45:5:   required from 'void Foam::directMappedFixedValueFvPatchField<Type>::mapField() [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:324:9:   required from 'void Foam::directMappedFixedValueFvPatchField<Type>::initEvaluate(Foam::Pstream::commsTypes) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:313:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fvMesh; From = const Foam::polyMesh]':
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:53:67:   required from 'void Foam::directMappedFixedValueFvPatchField<Type>::mapField() [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:324:9:   required from 'void Foam::directMappedFixedValueFvPatchField<Type>::initEvaluate(Foam::Pstream::commsTypes) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/directMappedFixedValue/directMappedFixedValueFvPatchField.C:313:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::ggiPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatch.H:270:54:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiPolyPatch; From = const Foam::polyPatch]':
lnInclude/ggiFvPatch.H:91:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::ggiFvPatch; From = const Foam::fvPatch]':
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:57:42:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:57:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/coupledFvPatchField.C:70:50:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:70:43:   required from 'Foam::ggiFvPatchField<Type>::ggiFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::ggiFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchVectorNFields.C:44:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 2>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 2> >; Type = Foam::VectorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:82:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 3>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 3> >; Type = Foam::VectorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:82:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 4>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 4> >; Type = Foam::VectorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:82:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 6>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 6> >; Type = Foam::VectorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:82:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::VectorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::VectorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::VectorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::VectorN<double, 8>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::VectorN<double, 8> >; Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:82:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 2>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 2> >; Type = Foam::TensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:84:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 3>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 3> >; Type = Foam::TensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:84:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 4>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 4> >; Type = Foam::TensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:84:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 6>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 6> >; Type = Foam::TensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:84:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::TensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::TensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::TensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::TensorN<double, 8>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::TensorN<double, 8> >; Type = Foam::TensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:84:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 2> >; Type = Foam::DiagTensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:86:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 3> >; Type = Foam::DiagTensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:86:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 4> >; Type = Foam::DiagTensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:86:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 6> >; Type = Foam::DiagTensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:86:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::DiagTensorN<double, 8> >; Type = Foam::DiagTensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:86:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 2> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 2>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 2>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 2> >; Type = Foam::SphericalTensorN<double, 2>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:88:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 3> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 3>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 3>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 3> >; Type = Foam::SphericalTensorN<double, 3>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:88:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 4> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 4>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 4>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 4> >; Type = Foam::SphericalTensorN<double, 4>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:88:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 6> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 6>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 6>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 6> >; Type = Foam::SphericalTensorN<double, 6>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:88:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensorN<double, 8> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensorN<double, 8>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensorN<double, 8>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchField.C:90:44:   required from 'Foam::wedgeFvPatchField<Type>::wedgeFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::wedgeFvPatchField<Foam::SphericalTensorN<double, 8> >; Type = Foam::SphericalTensorN<double, 8>]'
fields/fvPatchFields/constraint/wedge/wedgeFvPatchVectorNFields.C:88:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedPressureCompressibleDensityFvPatchScalarField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from lnInclude/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from lnInclude/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from lnInclude/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/coupledFvPatchField.H:42,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from lnInclude/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fluxCorrectedVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/flux/fluxFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fluxFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.H:41,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.H:41,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.H:41,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.H:41,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 8> >; From = const Foam::fvPatchField<Foam::SphericalTensorN<double, 8> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensorN<double, 8>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 6> >; From = const Foam::fvPatchField<Foam::SphericalTensorN<double, 6> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensorN<double, 6>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 4> >; From = const Foam::fvPatchField<Foam::SphericalTensorN<double, 4> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensorN<double, 4>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directMappedPolyPatch; From = const Foam::polyPatch]':
fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:120:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directMappedPatchBase; From = const Foam::polyPatch]':
fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:161:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fvMesh; From = const Foam::polyMesh]':
fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:163:67:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 3> >; From = const Foam::fvPatchField<Foam::SphericalTensorN<double, 3> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensorN<double, 3>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensorN<double, 2> >; From = const Foam::fvPatchField<Foam::SphericalTensorN<double, 2> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensorN<double, 2>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 8> >; From = const Foam::fvPatchField<Foam::DiagTensorN<double, 8> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensorN<double, 8>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 6> >; From = const Foam::fvPatchField<Foam::DiagTensorN<double, 6> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensorN<double, 6>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 4> >; From = const Foam::fvPatchField<Foam::DiagTensorN<double, 4> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensorN<double, 4>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 3> >; From = const Foam::fvPatchField<Foam::DiagTensorN<double, 3> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensorN<double, 3>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensorN<double, 2> >; From = const Foam::fvPatchField<Foam::DiagTensorN<double, 2> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensorN<double, 2>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::TensorN<double, 8> >; From = const Foam::fvPatchField<Foam::TensorN<double, 8> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::TensorN<double, 8>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::TensorN<double, 6> >; From = const Foam::fvPatchField<Foam::TensorN<double, 6> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::TensorN<double, 6>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::TensorN<double, 4> >; From = const Foam::fvPatchField<Foam::TensorN<double, 4> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::TensorN<double, 4>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::TensorN<double, 3> >; From = const Foam::fvPatchField<Foam::TensorN<double, 3> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::TensorN<double, 3>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::TensorN<double, 2> >; From = const Foam::fvPatchField<Foam::TensorN<double, 2> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::TensorN<double, 2>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::VectorN<double, 8> >; From = const Foam::fvPatchField<Foam::VectorN<double, 8> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::VectorN<double, 8>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::VectorN<double, 6> >; From = const Foam::fvPatchField<Foam::VectorN<double, 6> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::VectorN<double, 6>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::VectorN<double, 4> >; From = const Foam::fvPatchField<Foam::VectorN<double, 4> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::VectorN<double, 4>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::VectorN<double, 3> >; From = const Foam::fvPatchField<Foam::VectorN<double, 3> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::VectorN<double, 3>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::VectorN<double, 2> >; From = const Foam::fvPatchField<Foam::VectorN<double, 2> >]':
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::VectorN<double, 2>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/mapDistributeTemplates.C:112:25:   required from 'static void Foam::mapDistribute::distribute(Foam::Pstream::commsTypes, const Foam::List<Foam::Pair<int> >&, Foam::label, const labelListList&, const labelListList&, Foam::List<T>&, int) [with T = Foam::Vector<double>; Foam::label = int; Foam::labelListList = Foam::List<Foam::List<int> >]'
fields/fvPatchFields/derived/directMappedVelocityFluxFixedValue/directMappedVelocityFluxFixedValueFvPatchField.C:207:13:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/labelField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterface.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/lduInterfaceField.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/BlockLduInterfaceField.H:41,
                 from lnInclude/coupledFvPatchField.H:38,
                 from lnInclude/cyclicFvPatchField.H:38,
                 from lnInclude/jumpCyclicFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fan/fanFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicPolyPatch; From = const Foam::polyPatch]':
lnInclude/cyclicFvPatch.H:84:66:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/freestreamFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::cyclicFvPatch; From = const Foam::fvPatch]':
lnInclude/cyclicFvPatchField.C:43:48:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/jumpCyclicFvPatchField.C:42:35:   required from 'Foam::jumpCyclicFvPatchField<Type>::jumpCyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/derived/fan/fanFvPatchField.C:45:30:   required from 'Foam::fanFvPatchField<Type>::fanFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::fanFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fanFvPatchField<double>; Type = double]'
fields/fvPatchFields/derived/fan/fanFvPatchFields.C:35:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::lduInterface; From = const Foam::fvPatch]':
lnInclude/coupledFvPatchField.C:42:63:   required from 'Foam::coupledFvPatchField<Type>::coupledFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/cyclicFvPatchField.C:43:49:   required from 'Foam::cyclicFvPatchField<Type>::cyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/jumpCyclicFvPatchField.C:42:35:   required from 'Foam::jumpCyclicFvPatchField<Type>::jumpCyclicFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
fields/fvPatchFields/derived/fan/fanFvPatchField.C:45:30:   required from 'Foam::fanFvPatchField<Type>::fanFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&) [with fvPatchFieldType = Foam::fanFvPatchField<double>; Type = double]'
lnInclude/fvPatchField.H:123:9:   required from 'Foam::fvPatchField<Type>::addpatchConstructorToTable<fvPatchFieldType>::addpatchConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fanFvPatchField<double>; Type = double]'
fields/fvPatchFields/derived/fan/fanFvPatchFields.C:35:5:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fanFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/derived/fan/fanFvPatchField.C:170:50:   required from 'void Foam::fanFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fan/fanFvPatchField.H:150:26:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.H:41,
                 from fields/fvPatchFields/derived/buoyantPressure/buoyantPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.H:49,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.H:49,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.H:49,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.H:49,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<int> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<int>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<int> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:516:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::VectorN<double, 8>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::VectorN<double, 8>]'
lnInclude/ggiFvPatch.H:137:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:176:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:160:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::List<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = Foam::List<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:92:19:   required from 'static void Foam::Pstream::combineGather(const Foam::List<Foam::Pstream::commsStruct>&, T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/combineGatherScatter.C:154:9:   required from 'static void Foam::Pstream::combineGather(T&, const CombineOp&, int, Foam::label) [with T = Foam::List<Foam::List<double> >; CombineOp = Foam::Pstream::listEq; Foam::label = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolationWeights.C:533:31:   required from 'void Foam::GGIInterpolation<MasterPatch, SlavePatch>::calcAddressing() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolation.C:208:9:   required from 'const labelListList& Foam::GGIInterpolation<MasterPatch, SlavePatch>::masterAddr() const [with MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; Foam::labelListList = Foam::List<Foam::List<int> >]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/GGIInterpolate.C:429:19:   required from 'Foam::tmp<Foam::Field<Type2> > Foam::GGIInterpolation<MasterPatch, SlavePatch>::slaveToMaster(const Foam::Field<Type2>&) const [with Type = Foam::VectorN<double, 8>; MasterPatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>; SlavePatch = Foam::PrimitivePatch<Foam::face, Foam::List, const Foam::Field<Foam::Vector<double> >&>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ggiPolyPatchTemplates.C:152:51:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiPolyPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::VectorN<double, 8>]'
lnInclude/ggiFvPatch.H:137:52:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatch::interpolate(const Foam::Field<Type>&) const [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:176:23:   required from 'Foam::tmp<Foam::Field<Type> > Foam::ggiFvPatchField<Type>::patchNeighbourField() const [with Type = Foam::VectorN<double, 8>]'
fields/fvPatchFields/constraint/ggi/ggiFvPatchField.C:160:19:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = double; Foam::label = int]'
fields/fvPatchFields/derived/fixedFluxPressure/fixedFluxPressureFvPatchScalarField.C:65:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:71:45:   required from 'Foam::fixedNormalSlipFvPatchField<Type>::fixedNormalSlipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedNormalSlipFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedNormalSlipFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:71:45:   required from 'Foam::fixedNormalSlipFvPatchField<Type>::fixedNormalSlipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedNormalSlipFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedNormalSlipFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchFields.C:43:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedNormalSlipFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:123:58:   required from 'void Foam::fixedNormalSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedNormalSlipFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:123:58:   required from 'void Foam::fixedNormalSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedNormalSlip/fixedNormalSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/freestreamPressureFvPatchScalarField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:77:21:   required from 'Foam::fixedInternalValueFvPatchField<Type>::fixedInternalValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedInternalValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.H:49,
                 from fields/fvPatchFields/derived/fixedPressureCompressibleDensity/fixedPressureCompressibleDensityFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedInternalValueFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:146:61:   required from 'void Foam::fixedInternalValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/fixedInternalValueFvPatchField/fixedInternalValueFvPatchField.C:137:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/fluxCorrectedVelocity/fluxCorrectedVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/flux/fluxFvPatchField.C:62:36:   required from 'Foam::fluxFvPatchField<Type>::fluxFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fluxFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/flux/fluxFvPatchFields.C:38:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::fixedGradientFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/fixedGradientFvPatchField.C:123:56:   required from 'void Foam::fixedGradientFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/fixedGradientFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchField.C:69:25:   required from 'Foam::freestreamFvPatchField<Type>::freestreamFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::freestreamFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/freestream/freestreamFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/inletOutletFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/inletOutletTotalTemperatureFvPatchScalarField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::freestreamFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/freestreamPressure/freestreamPressureFvPatchScalarField.C:105:9:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/flowRateInletVelocityFvPatchVectorField.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/movingWallVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/translatingWallVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/rotatingWallVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/movingRotatingWallVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/oscillatingFixedValueFvPatchFields.o
SOURCE=fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/fixedMeanValueFvPatchFields.o
SOURCE=fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/outletInletFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H:59,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H:59,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H:59,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H:59,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/partialSlipFvPatchFields.o
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::inletOutletTotalTemperatureFvPatchScalarField; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:159:73:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:156:30:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchField.C:77:24:   required from 'Foam::inletOutletFvPatchField<Type>::inletOutletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::inletOutletFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/inletOutlet/inletOutletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = double; Foam::label = int]'
fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.C:87:29:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.H:39,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.H:39,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.H:39,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.H:39,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H:59,
                 from fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/movingWallVelocity/movingWallVelocityFvPatchVectorField.C:70:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/translatingWallVelocity/translatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.C:61:30:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureDirectedInletOutletVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureNormalInletOutletVelocityFvPatchVectorField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H:38,
                 from fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Istream.H:47,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ISstream.H:40,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOstreams.H:38,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.C:27,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorSpace.H:169,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/VectorTemplate.H:44,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/vector.H:39,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Random.H:38,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.H:38,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.H:37,
                 from fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:28:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/movingRotatingWallVelocity/movingRotatingWallVelocityFvPatchVectorField.C:100:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchField.C:80:13:   required from 'Foam::fixedMeanValueFvPatchField<Type>::fixedMeanValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::fixedMeanValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/fixedMeanValue/fixedMeanValueFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:75:21:   required from 'Foam::oscillatingFixedValueFvPatchField<Type>::oscillatingFixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::oscillatingFixedValueFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchField.C:73:24:   required from 'Foam::outletInletFvPatchField<Type>::outletInletFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::outletInletFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/outletInlet/outletInletFvPatchFields.C:39:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::oscillatingFixedValueFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:160:64:   required from 'void Foam::oscillatingFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/oscillatingFixedValue/oscillatingFixedValueFvPatchField.C:151:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/mixedFvPatchField.H:38,
                 from lnInclude/mixedFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchField.H:76,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::partialSlipFvPatchField<double>; From = const Foam::fvPatchField<double>]':
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:123:54:   required from 'void Foam::partialSlipFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/partialSlip/partialSlipFvPatchField.C:114:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureDirectedInletVelocityFvPatchVectorField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::pressureDirectedInletOutletVelocityFvPatchVectorField; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:166:13:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:162:30:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/pressureNormalInletOutletVelocity/pressureNormalInletOutletVelocityFvPatchVectorField.C:83:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/pressureDirectedInletOutletVelocity/pressureDirectedInletOutletVelocityFvPatchVectorField.C:84:47:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
fields/fvPatchFields/derived/advective/advectiveFvPatchField.C:83:13:   required from 'Foam::advectiveFvPatchField<Type>::advectiveFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::advectiveFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/advective/advectiveFvPatchFields.C:36:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
SOURCE=fields/fvPatchFields/derived/timeVaryingMappedPressureDirectedInletVelocity/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureInletOutletVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureInletUniformVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/pressureInletVelocityFvPatchVectorField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H:42,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H:42,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H:42,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H:42,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/rotatingPressureInletOutletVelocityFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/rotatingTotalPressureFvPatchScalarField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H:42,
                 from fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::pressureDirectedInletVelocityFvPatchVectorField; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:157:75:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.C:80:47:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
SOURCE=fields/fvPatchFields/derived/slip/slipFvPatchFields.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/slipFvPatchFields.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from lnInclude/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.H:40,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from lnInclude/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.H:40,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from lnInclude/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.H:40,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from lnInclude/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.H:40,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Tensor<double> >; From = const Foam::fvPatchField<Foam::Tensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Tensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::DiagTensor<double> >; From = const Foam::fvPatchField<Foam::DiagTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::DiagTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor4thOrder<double> >; From = const Foam::fvPatchField<Foam::SymmTensor4thOrder<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor4thOrder<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SymmTensor<double> >; From = const Foam::fvPatchField<Foam::SymmTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SymmTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::SphericalTensor<double> >; From = const Foam::fvPatchField<Foam::SphericalTensor<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::SphericalTensor<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::pressureInletOutletVelocityFvPatchVectorField; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:163:77:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.C:30,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/HashTable.H:556,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/objectRegistry.H:38,
                 from fields/fvPatchFields/derived/timeVaryingMappedPressureDirectedInletVelocity/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<double>; From = const Foam::fvPatchField<double>]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = double; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:158:39:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/pressureInletOutletVelocity/pressureInletOutletVelocityFvPatchVectorField.C:84:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from lnInclude/totalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from lnInclude/totalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from lnInclude/totalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from lnInclude/totalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::timeVaryingMappedFixedValueFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/timeVaryingMappedFixedValueFvPatchField.C:235:70:   required from 'void Foam::timeVaryingMappedFixedValueFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
fields/fvPatchFields/derived/timeVaryingMappedPressureDirectedInletVelocity/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.C:125:52:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from lnInclude/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.H:40,
                 from fields/fvPatchFields/derived/pressureInletUniformVelocity/pressureInletUniformVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/timeVaryingMappedPressureDirectedInletVelocity/timeVaryingMappedPressureDirectedInletVelocityFvPatchVectorField.C:60:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.H:41,
                 from fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/pressureInletVelocity/pressureInletVelocityFvPatchVectorField.C:73:70:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::directionMixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/directionMixedFvPatchField.C:135:57:   required from 'void Foam::directionMixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/directionMixedFvPatchField.C:126:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
SOURCE=fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/supersonicFreestreamFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/surfaceNormalFixedValueFvPatchVectorField.o
SOURCE=fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C ;  g++ -m64 -Dlinux64 -DWM_DP -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -O3  -DNoRepository -ftemplate-depth-200 -I/home/beifrend/foam-extend/foam-extend-4.0/src/meshTools/lnInclude -IlnInclude -I. -I/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude -I/home/beifrend/foam-extend/foam-extend-4.0/src/OSspecific/POSIX/lnInclude   -fPIC -c $SOURCE -o Make/linux64GccDPOpt/syringePressureFvPatchScalarField.o
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fixedValueFvPatchField.H:38,
                 from lnInclude/fixedValueFvPatchFields.H:29,
                 from lnInclude/totalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H:38,
                 from fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/transformFvPatchField.H:38,
                 from lnInclude/transformFvPatchFields.H:29,
                 from lnInclude/basicSymmetryFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchField.H:38,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.H:29,
                 from fields/fvPatchFields/derived/slip/slipFvPatchFields.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
make: *** [Make/linux64GccDPOpt/advectiveFvPatchFields.o] Error 1
make: *** Waiting for unfinished jobs....
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::Vector<double> >; Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SphericalTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SphericalTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SphericalTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SphericalTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SphericalTensor<double> >; Type = Foam::SphericalTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SymmTensor<double> >; Type = Foam::SymmTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::SymmTensor4thOrder<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::SymmTensor4thOrder<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::SymmTensor4thOrder<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::SymmTensor4thOrder<double> >; Type = Foam::SymmTensor4thOrder<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::DiagTensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::DiagTensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::DiagTensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::DiagTensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::DiagTensor<double> >; Type = Foam::DiagTensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Tensor<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Tensor<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Tensor<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Tensor<double>]'
lnInclude/transformFvPatchField.C:69:35:   required from 'Foam::transformFvPatchField<Type>::transformFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/basicSymmetryFvPatchField.C:74:68:   required from 'Foam::basicSymmetryFvPatchField<Type>::basicSymmetryFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchField.C:67:48:   required from 'Foam::slipFvPatchField<Type>::slipFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'static Foam::tmp<Foam::fvPatchField<Type> > Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::New(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
lnInclude/fvPatchField.H:149:9:   required from 'Foam::fvPatchField<Type>::adddictionaryConstructorToTable<fvPatchFieldType>::adddictionaryConstructorToTable(const Foam::word&) [with fvPatchFieldType = Foam::slipFvPatchField<Foam::Tensor<double> >; Type = Foam::Tensor<double>]'
fields/fvPatchFields/derived/slip/slipFvPatchFields.C:37:1:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.H:39,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.H:39,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.H:39,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.H:39,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H:48,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H:48,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H:48,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H:48,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, const Foam::DimensionedField<Type, GeoMesh>&)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:195:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:344,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C: In constructor 'Foam::DimensionedField<Type, GeoMesh>::DimensionedField(const Foam::word&, Foam::DimensionedField<Type, GeoMesh>&, bool)':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.C:210:42: warning: invalid use of incomplete type 'const class Foam::Time'
     regIOobject(IOobject(newName, df.time().timeName(), df.db())),
                                   ~~~~~~~^~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/regIOobject.H:41,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/DimensionedField.H:41,
                 from lnInclude/fvPatchField.H:48,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/IOobject.H:78:7: note: forward declaration of 'class Foam::Time'
 class Time;
       ^~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.H:39,
                 from fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::surfaceNormalFixedValueFvPatchVectorField; From = const Foam::fvPatchField<Foam::Vector<double> >]':
fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:121:69:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H:48,
                 from fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
In file included from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/token.H:46,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UListIO.C:28,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.C:232,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/UList.H:461,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/List.H:43,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/boolList.H:36,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/PrimitivePatchTemplate.H:54,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/primitivePatch.H:35,
                 from /home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/polyPatch.H:51,
                 from lnInclude/fvPatch.H:39,
                 from lnInclude/fvPatchField.H:47,
                 from lnInclude/fvPatchFields.H:29,
                 from fields/fvPatchFields/derived/syringePressure/syringePressureFvPatchScalarField.C:26:
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::processorPolyPatch; From = const Foam::processorPolyPatch]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/processorPolyPatch.H:183:60:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::coupledPolyPatch; From = const Foam::polyPatch]':
lnInclude/coupledFvPatch.H:91:68:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<int> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = int]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/faceI.H:162:40:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = double; Foam::label = int]'
fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:73:41:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.C:89:48:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<Foam::Vector<double> > >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = Foam::Vector<double>]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:231:20:   required from 'Foam::Field<Type>::Field(const Foam::word&, const Foam::dictionary&, Foam::label) [with Type = Foam::Vector<double>; Foam::label = int]'
lnInclude/fvPatchField.C:101:13:   required from 'Foam::fvPatchField<Type>::fvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&, bool) [with Type = Foam::Vector<double>]'
lnInclude/fixedValueFvPatchField.C:54:41:   required from 'Foam::fixedValueFvPatchField<Type>::fixedValueFvPatchField(const Foam::fvPatch&, const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::dictionary&) [with Type = Foam::Vector<double>]'
fields/fvPatchFields/derived/surfaceNormalFixedValue/surfaceNormalFixedValueFvPatchVectorField.C:73:41:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::dynamicCast(From&) [with To = Foam::token::Compound<Foam::List<double> >; From = Foam::token::compound]':
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:61:13:   required from 'Foam::Istream& Foam::operator>>(Foam::Istream&, Foam::List<T>&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/ListIO.C:40:15:   required from 'Foam::List<T>::List(Foam::Istream&) [with T = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/Field.C:203:18:   required from 'Foam::Field<Type>::Field(Foam::Istream&) [with Type = double]'
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/scalarCoeffField.H:91:27:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:91:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H: In instantiation of 'To& Foam::refCast(From&) [with To = const Foam::mixedFvPatchField<Foam::Vector<double> >; From = const Foam::fvPatchField<Foam::Vector<double> >]':
lnInclude/mixedFvPatchField.C:134:48:   required from 'void Foam::mixedFvPatchField<Type>::rmap(const Foam::fvPatchField<Type>&, const labelList&) [with Type = Foam::Vector<double>; Foam::labelList = Foam::List<int>]'
lnInclude/mixedFvPatchField.C:125:6:   required from here
/home/beifrend/foam-extend/foam-extend-4.0/src/foam/lnInclude/typeInfo.H:112:5: warning: catching polymorphic type 'class std::bad_cast' by value [-Wcatch-value=]
     catch (std::bad_cast)
     ^~~~~
